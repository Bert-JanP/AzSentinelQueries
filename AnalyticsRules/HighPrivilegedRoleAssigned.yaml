suppressionDuration: 5h
queryPeriod: 30m
kind: Scheduled
version: 1.0.0
tactics:
- PrivilegeEscalation
description: A user was assigned a high privileged role
entityMappings:
- entityType: Account
  fieldMappings:
  - identifier: FullName
    columnName: Actor
- entityType: Account
  fieldMappings:
  - identifier: FullName
    columnName: TargetUsername
suppressionEnabled: false
queryFrequency: 30m
triggerOperator: gt
name: 'High Privileged Role assigned'
triggerThreshold: 0
query: |+
  let HighPrivRoles = dynamic(["Global Administrator","Company Administrator","Privileged Authentication Administrator","Privileged Role Administrator"]);
  AuditLogs
  | where OperationName == "Add member to role"
  | mv-expand TargetResources
  | mv-expand TargetResources.modifiedProperties
  | where TargetResources_modifiedProperties.name == "Role.name"
  | extend AddedToRole = replace_string(tostring(TargetResources_modifiedProperties.newValue),'"','')
  | where AddedToRole in~ (HighPrivRoles)
  | extend Actor = iff(isnotempty(InitiatedBy.user.userPrincipalName),InitiatedBy.user.userPrincipalName,InitiatedBy.app.servicePrincipalId)
  | extend TargetUsername = TargetResources.userPrincipalName
enabled: true
id: fa2dbd7d-0db5-4b9e-91f8-8547e6059050
incidentConfiguration:
  createIncident: true
  groupingConfiguration:
    enabled: false
    reopenClosedIncident: false
    lookbackDuration: 5h
    matchingMethod: AllEntities
    groupByEntities: []
    groupByAlertDetails: []
    groupByCustomDetails: []
eventGroupingSettings:
  aggregationKind: AlertPerResult
customDetails:
  AddedToRole: AddedToRole
severity: Low

